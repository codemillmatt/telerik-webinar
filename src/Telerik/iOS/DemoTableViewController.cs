// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;

using Foundation;
using UIKit;
using System.Linq;

namespace Telerik.iOS
{
    public partial class DemoTableViewController : UITableViewController, IUITableViewDataSource, IUITableViewDelegate
    {
        Dictionary<int, List<SettingsItem>> source;

        public DemoTableViewController(IntPtr handle) : base(handle)
        {
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            source = new Dictionary<int, List<SettingsItem>>();

            var allSettings = new AllSettings();

            var abouts = allSettings.AllTheSettings.Where(si => si.SettingSection == Section.About).ToList();
            source.Add(0, abouts);
            var apps = allSettings.AllTheSettings.Where(si => si.SettingSection == Section.App).ToList();
            source.Add(1, apps);

            TableView.DataSource = this;

            this.Title = "Telerik";
        }

        public override nint NumberOfSections(UITableView tableView)
        {
            return 2;
        }

        public override nint RowsInSection(UITableView tableView, nint section)
        {
            return source[(int)section].Count;
        }

        public override string TitleForHeader(UITableView tableView, nint section)
        {
            if (section == 0)
                return "About Me";
            else
                return "App Settings";
        }

        public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
        {

            SettingsItem item = source[indexPath.Section][indexPath.Row];

            switch (item.TypeOfSetting)
            {
                case SettingType.Disclosure:
                    var cell = this.TableView.DequeueReusableCell("basic", indexPath);

                    cell.TextLabel.Text = item.Name;
                    return cell;

                case SettingType.Switch:
                    SwitchTableViewCell switchCell = this.TableView.DequeueReusableCell("switch", indexPath) as SwitchTableViewCell;

                    switchCell.SetLabel(item.Name);

                    return switchCell;
                default:
                    var upCell = this.TableView.DequeueReusableCell("upgrade", indexPath);

                    upCell.TextLabel.Text = item.Name;
                    return upCell;
            }

        }
    }
}
